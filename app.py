import telebot
from telebot import types
import requests
import random
# app.py
from db import db

def get_films_for_user(user_id):
    conn = db.get_conn()
    try:
        cursor = conn.cursor()
        cursor.execute('SELECT films FROM filmlist WHERE id_list = %s', (user_id,))
        films = cursor.fetchone()
        if films:
            return films[0]
        else:
            return []
    except Exception as error:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å PostgreSQL", error)
    finally:
        cursor.close()
        db.put_conn(conn)

def update_films_for_user(user_id, new_films):
    conn = db.get_conn()
    try:
        cursor = conn.cursor()
        cursor.execute('UPDATE filmlist SET films = %s WHERE id_list = %s', (new_films, user_id))
        conn.commit()
        print("–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
    except Exception as error:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å PostgreSQL", error)
    finally:
        cursor.close()
        db.put_conn(conn)

def add_user_if_not_exists(user_first_name):
    conn = db.get_conn()
    try:
        cursor = conn.cursor()
        user = db.get_user_by_name(user_first_name)
        if not user:
            cursor.execute(
                """INSERT INTO users (name, filmlist, fav_genre, recommend, watch_later)
                   VALUES (%s, %s, %s, %s, %s) RETURNING id""",
                (user_first_name, 1, 1, 1, 1)
            )
            user_id = cursor.fetchone()[0]
            conn.commit()
            print("–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ ‚Äã‚Äã–≤ —Ç–∞–±–ª–∏—Ü—É Users, id:", user_id)
        else:
            user_id = user[0]
            print("–ó–∞–ø–∏—Å—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, id:", user_id)
        return user_id
    except Exception as error:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å PostgreSQL", error)
    finally:
        cursor.close()
        db.put_conn(conn)




# –¢–û–ö–ï–ù–´
bot = telebot.TeleBot('7390621130:AAGaN0szPdQb2dFSxGwJargEDUcSnZggxI0')
api_key = "7fa8c3f5-59f4-4cef-ae3c-4b95d4378c10"
api_url = "https://kinopoiskapiunofficial.tech/api/v2.2/films/top?type=TOP_250_BEST_FILMS&page=1"
search_api_url = "https://kinopoiskapiunofficial.tech/api/v2.1/films/search-by-keyword"

headers = {
    'X-API-KEY': api_key
}

# –ü–£–°–¢–´–ï –ú–ê–°–°–ò–í–´
films_data = []
watch_later_list = []
searched_films = []
filmography = []


# API –¢–û–ü –§–ò–õ–¨–ú–û–í
def load_top_films():
    global films_data
    response = requests.get(api_url, headers=headers)
    if response.status_code == 200:
        data = response.json()
        films_data = data.get('films', [])
        print(f"Loaded {len(films_data)} films.")
    else:
        print(f"Failed to load films: {response.status_code}")


load_top_films()


# –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ
@bot.message_handler(commands=['start', 'main', 'hello'])
def start(message):
    button1 = types.InlineKeyboardButton("–¢–æ–ø —á–∞—Ä—Ç—ã üî•", callback_data='chart')
    button6 = types.InlineKeyboardButton("–ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞ üî•", callback_data='research_film')
    button2 = types.InlineKeyboardButton("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ üçø", callback_data='films')
    button3 = types.InlineKeyboardButton("–ú–æ—è —Ñ–∏–ª—å–º–æ–≥—Ä–∞—Ñ–∏—è üé¨", callback_data='filmography')
    button4 = types.InlineKeyboardButton("–£–¥–∏–≤–∏ –º–µ–Ω—è ‚ú®", callback_data='surprise')
    button5 = types.InlineKeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∑–∂–µ üïê", callback_data='watch_later')

    markup = types.InlineKeyboardMarkup()
    markup.add(button1)
    markup.add(button2)
    markup.add(button3)
    markup.add(button6)
    markup.add(button4, button5)

    bot.send_message(
        message.chat.id,
        f'–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ MyHobbyList! \n \n–î–∞–≤–∞–π –ø–æ–¥–±–µ—Ä–µ–º —Ç–µ–±–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ!',
        reply_markup=markup
    )


# –û–ë–†–ê–ë–û–¢–ö–ê –¢–û–ü –ß–ê–†–¢–û–í (–ü–ï–†–í–´–ô –í–´–ó–û–í)
@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    if call.message:
        global films_data
        if call.data == 'chart':
            response = requests.get(api_url, headers=headers)
            if response.status_code == 200:
                data = response.json()
                films_data = data['films'][:20]
                top_films = ""
                for i, film in enumerate(films_data, start=1):
                    genres = ", ".join([genre['genre'] for genre in film['genres']])
                    countries = ", ".join([country['country'] for country in film['countries']])
                    top_films += f"{i}. {film['nameRu']}\n–ì–æ–¥: {film['year']}\n–ñ–∞–Ω—Ä—ã: {genres}\n–°—Ç—Ä–∞–Ω—ã: {countries}\n\n"
                bot.send_message(call.message.chat.id, top_films)

                backButton = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='back_to_menu')
                selectButton = types.InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º", callback_data='select_number')
                markup = types.InlineKeyboardMarkup()
                markup.add(backButton, selectButton)
                bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

            else:
                bot.send_message(call.message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Ñ–∏–ª—å–º–∞—Ö.")


        # –û–ë–†–ê–ë–û–¢–ö–ê –í–°–ï–• –î–ï–ô–°–¢–í–ò–ô –ö–ù–û–ü–û–ö

        #–ì–õ–ê–í–ù–´–ï –ö–ù–û–ü–ö–ò

        elif call.data == 'back_to_menu':
            start(call.message)

        elif call.data == 'back_to_film_list':
            display_top_films(call.message)

        elif call.data == 'filmography':
            display_filmography(call.message)

        elif call.data == 'watch_later':
            display_watch_later(call.message)

        elif call.data == 'surprise':
            random_film(call.message)

        #########

        ### –ü–û–ò–°–ö –§–ò–õ–¨–ú–ê

        elif call.data == 'search_results':
            display_searched_films(call.message)

        #########

        ### –î–û–ë–ê–í–õ–ï–ù–ò–ï –í –ü–û–°–ú–û–¢–†–ï–¢–¨ –ü–û–ó–ñ–ï –ò –§–ò–õ–¨–ú–û–ì–†–ê–§–ò–Æ

        elif call.data.startswith('add_to_filmography_'):
            add_to_filmography(call)

        elif call.data.startswith('add_searched_to_watch_later_'):
            add_searched_to_watch_later(call)

        elif call.data.startswith('add_to_watch_later_'):
            if 'random' in call.data:
                add_to_watch_later_random(call)
            else:
                add_to_watch_later(call)

        #######3

        # –û–ë–†–ê–ë–û–¢–ö–ê –î–õ–Ø –ö–ù–û–ü–ö–ò "–í–´–ë–û–† –§–ò–õ–¨–ú–ê"

        elif call.data == 'select_watch_later_number':
            msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∏–ª—å–º–∞ –∏–∑ —Å–ø–∏—Å–∫–∞:")
            bot.register_next_step_handler(msg, process_watch_later_film_number)

        elif call.data == 'select_filmography_number':
            msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∏–ª—å–º–∞ –∏–∑ —Å–ø–∏—Å–∫–∞:")
            bot.register_next_step_handler(msg, process_filmography_film_number)

        elif call.data == 'select_search_number':
            msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∏–ª—å–º–∞ –∏–∑ —Å–ø–∏—Å–∫–∞:")
            bot.register_next_step_handler(msg, process_search_film_number)

        elif call.data == 'select_number':
            msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∏–ª—å–º–∞ –∏–∑ —Å–ø–∏—Å–∫–∞:")
            bot.register_next_step_handler(msg, process_film_number)

        elif call.data == 'research_film':
            msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞:")
            bot.register_next_step_handler(msg, search_film_by_keyword)


# –ü–û–î–†–û–ë–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –í–´–ë–†–ê–ù–ù–û–ú –§–ò–õ–¨–ú–ï
def get_film_details(film, chat_id):
    film_id = film['filmId']
    api_url_details = f"https://kinopoiskapiunofficial.tech/api/v2.2/films/{film_id}"
    response = requests.get(api_url_details, headers=headers)

    if response.status_code == 200:
        data = response.json()

        age_limit = data.get('ratingAgeLimits', 'N/A')
        if age_limit != 'N/A':
            age_limit = age_limit.replace("age", "")

        film_details = (
            f"–ù–∞–∑–≤–∞–Ω–∏–µ: {film['nameRu']}\n"
            f"–ì–æ–¥: {film['year']}\n"
            f"–†–µ–π—Ç–∏–Ω–≥: {film.get('rating', 'N/A')}\n"
            f"–û–ø–∏—Å–∞–Ω–∏–µ: {data.get('description', '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')}\n"
            f"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {data.get('filmLength', 'N/A')} –º–∏–Ω—É—Ç\n"
            f"–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: {age_limit}\n"
        )
        if 'posterUrl' in data:
            bot.send_photo(chat_id=chat_id, photo=data['posterUrl'])
        return film_details
    else:
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∏–ª—å–º–µ."



# –û–ë–†–ê–ë–û–¢–ö–ê –ì–õ–ê–í–ù–´–• –ö–ù–û–ü–û–ö


# –ö–ù–û–ü–ö–ê –ú–û–Ø –§–ò–õ–¨–ú–û–ì–†–ê–§–ò–Ø
def display_filmography(message):
    if not filmography:
        bot.send_message(message.chat.id, "–í–∞—à–∞ —Ñ–∏–ª—å–º–æ–≥—Ä–∞—Ñ–∏—è –ø—É—Å—Ç–∞.")
        return

    filmography_details = ""
    for i, film in enumerate(filmography, start=1):
        genres = ", ".join([genre['genre'] for genre in film['genres']])
        countries = ", ".join([country['country'] for country in film['countries']])
        filmography_details += f"{i}. {film['nameRu']}\n–ì–æ–¥: {film['year']}\n–ñ–∞–Ω—Ä—ã: {genres}\n–°—Ç—Ä–∞–Ω—ã: {countries}\n\n"

    bot.send_message(message.chat.id, filmography_details)

    backButton = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")
    selectButton = types.InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º", callback_data='select_filmography_number')
    markup = types.InlineKeyboardMarkup()
    markup.add(selectButton)
    markup.add(backButton)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)


# –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –í–´–ë–†–ê–ù–ù–û–ú –§–ò–õ–¨–ú–ï (–§–£–ù–ö–¶–ò–Ø –ù–£–ñ–ù–ê –î–õ–Ø –í–û–ó–í–†–ê–©–ï–ù–ò–Ø –ß–ï–†–ï–ó –ö–ù–û–ü–ö–£)
def display_top_films(message):
    top_films = ""
    for i, film in enumerate(films_data, start=1):
        genres = ", ".join([genre['genre'] for genre in film['genres']])
        countries = ", ".join([country['country'] for country in film['countries']])
        top_films += f"{i}. {film['nameRu']}\n–ì–æ–¥: {film['year']}\n–ñ–∞–Ω—Ä—ã: {genres}\n–°—Ç—Ä–∞–Ω—ã: {countries}\n\n"
    bot.send_message(message.chat.id, top_films)

    backButton = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='back_to_menu')
    selectButton = types.InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º", callback_data='select_number')
    markup = types.InlineKeyboardMarkup()
    markup.add(backButton, selectButton)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)


# –ö–ù–û–ü–ö–ê –ü–û–°–ú–û–¢–†–ï–¢–¨ –ü–û–ó–ñ–ï
def display_watch_later(message):
    if not watch_later_list:
        bot.send_message(message.chat.id, "–í–∞—à —Å–ø–∏—Å–æ–∫ '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∑–∂–µ' –ø—É—Å—Ç.")
        return

    watch_later_films = ""
    for i, film in enumerate(watch_later_list, start=1):
        genres = ", ".join([genre['genre'] for genre in film['genres']])
        countries = ", ".join([country['country'] for country in film['countries']])
        watch_later_films += f"{i}. {film['nameRu']}\n–ì–æ–¥: {film['year']}\n–ñ–∞–Ω—Ä—ã: {genres}\n–°—Ç—Ä–∞–Ω—ã: {countries}\n\n"

    bot.send_message(message.chat.id, watch_later_films)

    buttonBack = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")
    selectButton = types.InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º", callback_data='select_watch_later_number')
    markup = types.InlineKeyboardMarkup()
    markup.add(selectButton)
    markup.add(buttonBack)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

# –ö–ù–û–ü–ö–ê –£–î–ò–í–ò –ú–ï–ù–Ø
def random_film(message):
    if not films_data:
        bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Ñ–∏–ª—å–º–∞—Ö.")
        return

    film = random.choice(films_data)
    film_details = get_film_details(film, message.chat.id)
    bot.send_message(message.chat.id, film_details)

    backButton = types.InlineKeyboardButton("–í–µ—Ä—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")
    watchLaterButton = types.InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –≤ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∑–∂–µ",
                                                  callback_data=f'add_to_watch_later_random_{film["filmId"]}')
    filmographyButton = types.InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –≤ –º–æ—é —Ñ–∏–ª—å–º–æ–≥—Ä–∞—Ñ–∏—é",
                                                   callback_data=f'add_to_filmography_random_{film["filmId"]}')
    markup = types.InlineKeyboardMarkup()
    markup.add(watchLaterButton, filmographyButton)
    markup.add(backButton)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

# –í–´–í–û–î –ù–ê–ô–î–ï–ù–ù–´–• –§–ò–õ–¨–ú–û–í –° –ü–û–ò–°–ö–ê –§–ò–õ–¨–ú–û–í

def display_searched_films(message):
    search_results = ""
    for i, film in enumerate(searched_films, start=1):
        genres = ", ".join([genre['genre'] for genre in film.get('genres', [])])
        countries = ", ".join([country['country'] for country in film.get('countries', [])])
        search_results += f"{i}. {film['nameRu']}\n–ì–æ–¥: {film.get('year', 'N/A')}\n–ñ–∞–Ω—Ä—ã: {genres}\n–°—Ç—Ä–∞–Ω—ã: {countries}\n\n"
    bot.send_message(message.chat.id, search_results)

    backButton = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_menu')
    selectButton = types.InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º", callback_data='select_number')
    markup = types.InlineKeyboardMarkup()
    markup.add(backButton, selectButton)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)


# –ö–ù–û–ü–ö–ò –î–û–ë–ê–í–õ–ï–ù–ò–Ø



# –î–û–ë–ê–í–õ–ï–ù–ò–ï –í –ú–û–Æ –§–ò–õ–¨–ú–û–ì–†–ê–§–ò–Æ
def add_to_filmography(call):
    try:
        film_index = int(call.data.split('_')[-1])
        if 'search' in call.data:
            film = searched_films[film_index]
        elif 'random' in call.data:
            film_id = film_index
            film = next((film for film in films_data if film["filmId"] == film_id), None)
        else:
            film = films_data[film_index]

        if film:
            if film not in filmography:
                filmography.append(film)
                bot.send_message(call.message.chat.id, f"{film['nameRu']} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≤–∞—à—É —Ñ–∏–ª—å–º–æ–≥—Ä–∞—Ñ–∏—é.")
                buttonBack = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")
                markup = types.InlineKeyboardMarkup()
                markup.add(buttonBack)
                bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
            else:
                bot.send_message(call.message.chat.id, f"{film['nameRu']} —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–π —Ñ–∏–ª—å–º–æ–≥—Ä–∞—Ñ–∏–∏.")
        else:
            bot.send_message(call.message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ñ–∏–ª—å–º–∞ –≤ —Ñ–∏–ª—å–º–æ–≥—Ä–∞—Ñ–∏—é.")
    except (ValueError, IndexError):
        bot.send_message(call.message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ñ–∏–ª—å–º–∞ –≤ —Ñ–∏–ª—å–º–æ–≥—Ä–∞—Ñ–∏—é.")

# –î–û–ë–ê–í–õ–ï–ù–ò–ï –§–ò–õ–¨–ú–ê –í –ü–û–°–ú–û–¢–†–ï–¢–¨ –ü–û–ó–ñ–ï (–§–£–ù–ö–¶–ò–Ø)
def add_to_watch_later(call):
    try:
        film_index = int(call.data.split('_')[-1])
        film = films_data[film_index]
        if film not in watch_later_list:
            watch_later_list.append(film)
            bot.send_message(call.message.chat.id, f"{film['nameRu']} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∑–∂–µ'.")
            buttonBack = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")
            markup = types.InlineKeyboardMarkup()
            markup.add(buttonBack)
            bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
        else:
            bot.send_message(call.message.chat.id, f"{film['nameRu']} —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∑–∂–µ'.")
            buttonBack = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")
            markup = types.InlineKeyboardMarkup()
            markup.add(buttonBack)
            bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
    except (ValueError, IndexError):
        bot.send_message(call.message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ñ–∏–ª—å–º–∞ –≤ —Å–ø–∏—Å–æ–∫.")
        buttonBack = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")
        markup = types.InlineKeyboardMarkup()
        markup.add(buttonBack)
        bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)


# –î–û–ë–ê–í–õ–ï–ù–ò–ï –í –ü–û–°–ú–û–¢–†–ï–¢–¨ –ü–û–ó–ñ–ï –î–õ–Ø –ü–û–ò–°–ö–ê –§–ò–õ–¨–ú–ê
def add_searched_to_watch_later(call):
    try:
        film_index = int(call.data.split('_')[-1])
        film = searched_films[film_index]
        if film not in watch_later_list:
            watch_later_list.append(film)
            bot.send_message(call.message.chat.id, f"{film['nameRu']} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∑–∂–µ'.")
            buttonBack = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")
            backButton = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="search_results")
            markup = types.InlineKeyboardMarkup()
            markup.add(buttonBack)
            markup.add(backButton)
            bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
        else:
            bot.send_message(call.message.chat.id, f"{film['nameRu']} —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∑–∂–µ'.")
    except (ValueError, IndexError):
        bot.send_message(call.message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ñ–∏–ª—å–º–∞ –≤ —Å–ø–∏—Å–æ–∫.")


# –î–û–ë–ê–í–õ–ï–ù–ò–ï –í –ü–û–°–ú–û–¢–†–ï–¢–¨ –ü–û–ó–ñ–ï –î–õ–Ø –£–î–ò–í–ò –ú–ï–ù–Ø
def add_to_watch_later_random(call):
    film_id = int(call.data.split('_')[-1])
    film = next((film for film in films_data if film["filmId"] == film_id), None)
    if film:
        if film not in watch_later_list:
            watch_later_list.append(film)
            bot.send_message(call.message.chat.id, f"{film['nameRu']} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∑–∂–µ'.")
            buttonBack = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")
            markup = types.InlineKeyboardMarkup()
            markup.add(buttonBack)
        else:
            bot.send_message(call.message.chat.id, f"{film['nameRu']} —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∑–∂–µ'.")
            buttonBack = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")
            markup = types.InlineKeyboardMarkup()
            markup.add(buttonBack)
    else:
        bot.send_message(call.message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ñ–∏–ª—å–º–∞ –≤ —Å–ø–∏—Å–æ–∫.")
        buttonBack = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")
        markup = types.InlineKeyboardMarkup()
        markup.add(buttonBack)

######


# –ü–û–ò–°–ö –§–ò–õ–¨–ú–û–í


# –ö–ù–û–ü–ö–ê –ü–û–ò–°–ö –§–ò–õ–¨–ú–ê, –í–´–í–û–î –ù–ê–ô–î–ï–ù–ù–´–• –§–ò–õ–¨–ú–û–í
def search_film_by_keyword(message):
    keyword = message.text
    response = requests.get(f"{search_api_url}?keyword={keyword}&page=1", headers=headers)
    if response.status_code == 200:
        data = response.json()
        global searched_films
        searched_films = data.get('films', [])
        if not searched_films:
            bot.send_message(message.chat.id, "–§–∏–ª—å–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
            buttonBack = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")
            markup = types.InlineKeyboardMarkup()
            markup.add(buttonBack)
            return

        search_results = ""
        for i, film in enumerate(searched_films, start=1):
            genres = ", ".join([genre['genre'] for genre in film.get('genres', [])])
            countries = ", ".join([country['country'] for country in film.get('countries', [])])
            search_results += f"{i}. {film['nameRu']}\n–ì–æ–¥: {film.get('year', 'N/A')}\n–ñ–∞–Ω—Ä—ã: {genres}\n–°—Ç—Ä–∞–Ω—ã: {countries}\n\n"

        bot.send_message(message.chat.id, search_results)

        backButton = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='back_to_menu')
        selectButton = types.InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º", callback_data='select_search_number')
        markup = types.InlineKeyboardMarkup()
        markup.add(backButton, selectButton)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤.")




### –í–í–û–î –¶–ò–§–†

# –í–í–û–î –¶–ò–§–†–´ –î–õ–Ø –ü–û–î–†–û–ë–ù–û–ô –ò–ù–§–û–†–ú–ê–¶–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ú –í –§–ò–õ–¨–ú–û–ì–†–ê–§–ò–ò
def process_filmography_film_number(message):
    try:
        film_index = int(message.text) - 1
        if 0 <= film_index < len(filmography):
            film = filmography[film_index]
            film_details = get_film_details(film, message.chat.id)
            bot.send_message(message.chat.id, film_details)
            buttonBack = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")
            buttonBackFilm = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="filmography")
            markup = types.InlineKeyboardMarkup()
            markup.add(buttonBack)
            markup.add(buttonBackFilm)
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
        else:
            bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ñ–∏–ª—å–º–∞.")
            display_filmography(message)
    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∏–ª—å–º–∞.")
        display_filmography(message)

# –í–í–û–î –¶–ò–§–†–´ –î–õ–Ø –ü–û–î–†–û–ë–ù–û–ô –ò–ù–§–û–†–ú–ê–¶–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ú –í –ü–û–ò–°–ö–ï
def process_search_film_number(message):
    try:
        film_index = int(message.text) - 1
        if 0 <= film_index < len(searched_films):
            film = searched_films[film_index]
            film_details = get_film_details(film, message.chat.id)
            bot.send_message(message.chat.id, film_details)

            backButton = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='search_results')
            buttonBack = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='back_to_menu')
            watchLaterButton = types.InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –≤ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∑–∂–µ",
                                                          callback_data=f'add_searched_to_watch_later_{film_index}')
            filmographyButton = types.InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –≤ –º–æ—é —Ñ–∏–ª—å–º–æ–≥—Ä–∞—Ñ–∏—é",
                                                           callback_data=f'add_to_filmography_search_{film_index}')
            markup = types.InlineKeyboardMarkup()
            markup.add( watchLaterButton, filmographyButton)
            markup.add(backButton)
            markup.add(buttonBack)
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
        else:
            bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ñ–∏–ª—å–º–∞.")
            display_searched_films(message)
            buttonBack = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")
            markup = types.InlineKeyboardMarkup()
            markup.add(buttonBack)
    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∏–ª—å–º–∞.")
        display_searched_films(message)
        buttonBack = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")
        markup = types.InlineKeyboardMarkup()
        markup.add(buttonBack)


### –í–í–û–î –¶–ò–§–†–´ –î–õ–Ø –ü–û–î–†–û–ë–ù–û–ô –ò–ù–§–û–†–ú–ê–¶–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–õ–ï–ú –î–õ–Ø –ü–û–°–ú–û–¢–†–ï–¢–¨ –ü–û–ó–ñ–ï
def process_watch_later_film_number(message):
    try:
        film_index = int(message.text) - 1
        if 0 <= film_index < len(watch_later_list):
            film = watch_later_list[film_index]
            film_details = get_film_details(film, message.chat.id)
            bot.send_message(message.chat.id, film_details)
            buttonBackWatch = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='watch_later')
            buttonBack = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='back_to_menu')
            markup = types.InlineKeyboardMarkup()
            markup.add(buttonBackWatch)
            markup.add(buttonBack)
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
        else:
            bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ñ–∏–ª—å–º–∞.")
            display_watch_later(message)
            buttonBackWatch = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='watch_later')
            buttonBack = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='back_to_menu')
            markup = types.InlineKeyboardMarkup()
            markup.add(buttonBackWatch)
            markup.add(buttonBack)
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∏–ª—å–º–∞.")
        display_watch_later(message)
        buttonBackWatch = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='watch_later')
        buttonBack = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='back_to_menu')
        markup = types.InlineKeyboardMarkup()
        markup.add(buttonBackWatch)
        markup.add(buttonBack)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)


# –í–í–û–î –¶–ò–§–†–´ –î–õ–Ø –ü–û–î–†–û–ë–ù–û–ô –ò–ù–§–û–†–ú–ê–¶–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ú –î–õ–Ø –¢–û–ü –ß–ê–†–¢–û–ú
def process_film_number(message):
    try:
        film_index = int(message.text) - 1
        if 0 <= film_index < len(films_data):
            film = films_data[film_index]
            film_details = get_film_details(film, message.chat.id)
            bot.send_message(message.chat.id, film_details)

            buttonBack = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")
            backButton = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_film_list')
            watchLaterButton = types.InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –≤ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∑–∂–µ",
                                                          callback_data=f'add_to_watch_later_{film_index}')
            filmographyButton = types.InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –≤ –º–æ—é —Ñ–∏–ª—å–º–æ–≥—Ä–∞—Ñ–∏—é",
                                                           callback_data=f'add_to_filmography_{film_index}')
            markup = types.InlineKeyboardMarkup()
            markup.add( watchLaterButton, filmographyButton)
            markup.add(backButton)
            markup.add(buttonBack)
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
        else:
            bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ñ–∏–ª—å–º–∞")
            display_top_films(message)
            buttonBack = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")
            backButton = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_film_list')
            markup = types.InlineKeyboardMarkup()
            markup.add(backButton)
            markup.add(buttonBack)
    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∏–ª—å–º–∞.")
        display_top_films(message)
        ButtonBack = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")
        backButton = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_film_list')
        markup = types.InlineKeyboardMarkup()
        markup.add(backButton)
        markup.add(ButtonBack)

# app.py
def main():
    user_first_name = "ff6"  # –ø—Ä–∏–º–µ—Ä –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = add_user_if_not_exists(user_first_name)
    films = get_films_for_user(user_id)
    print(f"–°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {films}")
    
    new_films = [1, 2, 3]
    update_films_for_user(user_id, new_films)
    films = get_films_for_user(user_id)
    print(f"–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {films}")

if __name__ == "__main__":
    main()


# –ó–ê–ü–£–°–ö –ë–û–¢–ê
bot.polling(none_stop=True)
